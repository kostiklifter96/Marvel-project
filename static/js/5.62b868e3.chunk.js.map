{"version":3,"sources":["components/comicsListItem/ComicsListItem.jsx","components/comicsList/ComicsList.jsx","components/pages/ComicsPage.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["ComicsListItem","id","title","thumbnail","className","to","src","alt","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onCharListLoaded","newComicList","ended","preComicList","preOffset","comicsItems","map","el","i","imgStyle","objectFit","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"mappings":"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","file":"static/js/5.62b868e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ComicsListItem({ id, title, thumbnail }) {\r\n   return (\r\n      <li className=\"comics__item\">\r\n         <Link to={`/comics/${id}`}>\r\n            <img src={thumbnail} alt=\"x-men\" className=\"comics__item-img\" />\r\n            <div className=\"comics__item-name\">{title}</div>\r\n            <div className=\"comics__item-price\">NOT AVAILABLE</div>\r\n         </Link>\r\n      </li>\r\n   )\r\n}\r\n","import './comicsList.scss'\nimport { useEffect, useState } from 'react'\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\nimport ComicsListItem from '../comicsListItem/ComicsListItem'\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case 'waiting':\n      return <Spinner />\n    case 'loading':\n      return newItemLoading ? <Component /> : <Spinner />\n    case 'confirmed':\n      return <Component />\n    case 'error':\n      return <ErrorMessage />\n    default:\n      throw new Error('Unexrected process state')\n  }\n}\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([])\n  const [newItemLoading, setNewItemLoading] = useState(false)\n  const [offset, setOffset] = useState(250)\n  const [charEnded, setCharEnded] = useState(false)\n\n  const { getAllComics, process, setProcess } = useMarvelService()\n\n  useEffect(() => {\n    onRequest(offset, true)\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true)\n\n    getAllComics(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess('confirmed'))\n  }\n\n  const onCharListLoaded = (newComicList) => {\n    let ended = false\n    if (newComicList < 8) {\n      ended = true\n    }\n\n    setComicsList((preComicList) => [...preComicList, ...newComicList])\n    setNewItemLoading(false)\n    setOffset((preOffset) => preOffset + 8)\n    setCharEnded(ended)\n  }\n\n  const comicsItems = (\n    <ul className='comics__grid'>\n      {comicsList.map((el, i) => {\n        let imgStyle = { objectFit: 'cover' }\n        if (\n          el.thumbnail ===\n          'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n        ) {\n          imgStyle = { objectFit: 'unset' }\n        }\n        return <ComicsListItem key={i} {...el} imgStyle={imgStyle} />\n      })}\n    </ul>\n  )\n\n  return (\n    <div className='comics__list'>\n      {setContent(process, () => comicsItems, newItemLoading)}\n      <ul className='comics__grid'></ul>\n      <button\n        className='button button__main button__long'\n        disabled={newItemLoading}\n        style={{ display: charEnded ? 'none' : 'block' }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className='inner'>load more</div>\n      </button>\n    </div>\n  )\n}\n\nexport default ComicsList\n","import ComicsList from '../comicsList/ComicsList'\r\nimport AppBanner from '../appBanner/AppBanner'\r\n\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nexport default function ComicsPage() {\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta name=\"description\" content=\"Marvel information portal\" />\r\n            <title>Page with list of our comics</title>\r\n         </Helmet>\r\n         <AppBanner />\r\n         <ComicsList />\r\n      </>\r\n   )\r\n}\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}